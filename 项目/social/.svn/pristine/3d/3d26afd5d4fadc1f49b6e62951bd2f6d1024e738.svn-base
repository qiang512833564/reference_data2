//
//  HWWuYeServiceView.m
//  Community
//
//  Created by niedi on 15/6/11.
//  Copyright (c) 2015年 caijingpeng. All rights reserved.
//

#import "HWWuYeServiceView.h"
#import "HWWuYeServiceModel.h"
#import "HWServiceIcon.h"
#import "HWWuYePayVC.h"
#import "HWWuYePublishNoticeVC.h"
#import "HWHomeServiceVC.h"
#import "RTLabel.h"
#import "HWPerfectPropertyDataVC.h"
#import "TwoDimensionExtendViewController.h"
#import "HWInviteCustomVC.h"

@interface HWWuYeServiceView ()<RTLabelDelegate, UIActionSheetDelegate>
{
    UIView *_tableHeaderView;
    DView *_iconBackView;
    
    NSMutableArray *deleteArr;
    
    NSMutableArray *_iconModelArr;
    NSMutableArray *_iconArr;
    HWServiceIcon *_currentIcon;
    CGPoint _iconTouchPoint;
    
    BOOL _isCompany;
    BOOL _isFinished;
    NSString *_callNum;
    
    HWWuYeServiceModel *_model;
}
@end


@implementation HWWuYeServiceView

- (instancetype)initWithFrame:(CGRect)frame isCompany:(BOOL)isCompany
{
    if (self = [super initWithFrame:frame])
    {
        deleteArr = [NSMutableArray array];
        _isFinished = NO;
        _isCompany = isCompany;
        [self queryListData];
    }
    return self;
}

- (void)queryListData
{
    if (_isCompany)
    {
        [self queryIconData];
        [self checkPublishNotice];
    }
    else
    {
        [self checkCallNum];
    }
}

#pragma mark - 合作物业情况

#pragma mark - 合作物业UI
- (void)checkPublishNotice
{
    /*接口 ：hw-sq-app-web/wy/queryWyDetailInfo.do
     入参：key=6f5ddc33-b076-422c-bdc0-c099a0d14717
     出参：
     {
     'status': '1',
     'data': {
     'tenementId': 1033575543,
     'name': '小张物业',
     'intro': '松岛枫',
     'address': '上海呼兰路',
     'openTime': '09:00-23:00',
     'coStatus': 1,---合作状态:0,已合作，1：未合作
     'tenementTel': [
     ],
     'topic':
     { 'topicId': 1034481469, 'content': '和好久没有尤文图斯', 'createTime': 1423727247000 }
     
     },
     'detail': '请求数据成功!',
     'key': '6f5ddc33-b076-422c-bdc0-c099a0d14717'
     }*/
    
    NSMutableDictionary *param = [[NSMutableDictionary alloc]init];
    [param setPObject:[HWUserLogin currentUserLogin].key forKey:@"key"];
    
    HWHTTPRequestOperationManager *manager = [HWHTTPRequestOperationManager manager];
    [manager POST:KCheckWuYeInfo parameters:param queue:nil success:^(id responese)
     {
         NSLog(@"responese ========================= %@",responese);
         
         _model = [[HWWuYeServiceModel alloc] initWithdict:[responese dictionaryObjectForKey:@"data"]];
         if (_isFinished)
         {
             [self loadUIForCompany];
         }
         else
         {
             _isFinished = YES;
         }
         
         [self doneLoadingTableViewData];
     } failure:^(NSString *code, NSString *error) {
         _isFinished = NO;
         [self doneLoadingTableViewData];
         [Utility showToastWithMessage:error inView:self];
     }];
}


- (void)loadUIForCompany
{
    _tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, 500)];
    
    DImageV *backImg = [DImageV imagV:@"" frameX:0 y:0 w:kScreenWidth h:160.0f];
    backImg.backgroundColor = THEME_COLOR_ORANGE;
    backImg.userInteractionEnabled = YES;
    [_tableHeaderView addSubview:backImg];
    
    DImageV *headImg = [DImageV imagV:@"icon_personal" frameX:15 y:20 w:55.0f h:55.0f];
    [headImg setRadius:headImg.frame.size.width / 2.0f];
    [backImg addSubview:headImg];
    
    DLable *titleLab = [DLable LabTxt:_model.name txtFont:TF16 txtColor:THEME_COLOR_White frameX:CGRectGetMaxX(headImg.frame) + 10 y:25 w:kScreenWidth - 2 * 15 - 40 - 55 - 10 h:20];
    [backImg addSubview:titleLab];
    
    DImageV *signImg = [DImageV imagV:@"label_16_10" frameX:titleLab.frame.origin.x y:CGRectGetMaxY(titleLab.frame) + 5 w:60 h:22];
    [backImg addSubview:signImg];
    
    DButton *callBtn = [DButton btnImg:@"icon_phone_4" frameX:kScreenWidth - 15.0f - 40.0f y:25 w:40.0f h:40.0f target:self action:@selector(callBtnClick)];
    [backImg addSubview:callBtn];
    
    DImageV *locationIconImg = [DImageV imagV:@"icon_add_2" frameX:15 y:CGRectGetMaxY(headImg.frame) + 20 w:15 h:20];
    [backImg addSubview:locationIconImg];
    
    NSString *addressStr = [NSString stringWithFormat:@"地址：%@", _model.address];
    DLable *locationLab = [DLable LabTxt:addressStr txtFont:TF15 txtColor:THEME_COLOR_White frameX:CGRectGetMaxX(locationIconImg.frame) + 5.5f y:CGRectGetMinY(locationIconImg.frame) w:kScreenWidth - (CGRectGetMaxX(locationIconImg.frame) + 5) - 15 h:20];
    [backImg addSubview:locationLab];
    
    DImageV *workTimeImg = [DImageV imagV:@"icon_time_2" frameX:15 y:CGRectGetMaxY(locationIconImg.frame) + 10 w:15 h:16];
    [backImg addSubview:workTimeImg];
    
    NSString *openStr = [NSString stringWithFormat:@"办公时间：%@", _model.openTime];
    DLable *workTimeLab = [DLable LabTxt:openStr txtFont:TF15 txtColor:THEME_COLOR_White frameX:CGRectGetMaxX(workTimeImg.frame) + 5.5f y:CGRectGetMinY(workTimeImg.frame) - 2.5f w:kScreenWidth - (CGRectGetMaxX(workTimeImg.frame) + 5) - 15 h:20];
    [backImg addSubview:workTimeLab];
    
    CGRect frame = CGRectZero;
    
    if (_model.publishModel.topicId.length != 0)
    {
        DView *publishNoticeView = [DView viewFrameX:0 y:CGRectGetMaxY(backImg.frame) w:kScreenWidth h:120];
        publishNoticeView.backgroundColor = [UIColor whiteColor];
        [_tableHeaderView addSubview:publishNoticeView];
        
        DImageV *labaIcon = [DImageV imagV:@"icon_16_02" frameX:15 y:15 w:20 h:20];
        [publishNoticeView addSubview:labaIcon];
        
        DImageV *redDotImgV = [DImageV imagV:@"wuyeRedDot" frameX:15 y:-4 w:7 h:7];
        [labaIcon addSubview:redDotImgV];
        
        if ([_model.hasUnread isEqualToString:@"1"])
        {
            redDotImgV.hidden = NO;
        }
        else
        {
            redDotImgV.hidden = YES;
        }
        
        DLable *publishTitleLab = [DLable LabTxt:@"物业公告" txtFont:TF16 txtColor:THEME_COLOR_SMOKE frameX:CGRectGetMaxX(labaIcon.frame) + 5 y:15 w:kScreenWidth - 120 - 15 - (CGRectGetMaxX(labaIcon.frame) + 5) h:20];
        [publishNoticeView addSubview:publishTitleLab];
        
        DLable *publishTimeLab = [DLable LabTxt:[Utility getMinTimeWithTimestamp:_model.publishModel.createTime] txtFont:TF13 txtColor:THEME_COLOR_TEXT frameX:kScreenWidth - 15 - 120 y:CGRectGetMinY(publishTitleLab.frame) + 1 w:120 h:20];
        publishTimeLab.textAlignment = NSTextAlignmentRight;
        [publishNoticeView addSubview:publishTimeLab];
        
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapPublishNoticView)];
        [publishNoticeView addGestureRecognizer:tap];
        
        NSString *publishContentStr = _model.publishModel.content;
        CGFloat height = [Utility calculateStringHeight:publishContentStr font:[UIFont fontWithName:FONTNAME size:TF15] constrainedSize:CGSizeMake(kScreenWidth - 2 * 15, 10000)].height;
        if (height > 88)
        {
            height = 88;
        }
        DLable *publishContentLab = [DLable LabTxt:publishContentStr txtFont:TF15 txtColor:THEME_COLOR_SMOKE frameX:15 y:CGRectGetMaxY(labaIcon.frame) + 15 w:kScreenWidth - 2 * 15 h:height];
        publishContentLab.numberOfLines = 5;
        [publishNoticeView addSubview:publishContentLab];
        
        frame = publishNoticeView.frame;
        frame.size.height = CGRectGetMaxY(publishContentLab.frame) + 15;
        publishNoticeView.frame = frame;
        
        DImageV *buttomLine = [DImageV imagV:nil frameX:0 y:CGRectGetHeight(publishNoticeView.frame) - 0.5f w:kScreenWidth h:0.5f];
        buttomLine.backgroundColor = THEME_COLOR_LINE;
        [publishNoticeView addSubview:buttomLine];
        
        _iconBackView = [DView viewFrameX:0 y:CGRectGetMaxY(publishNoticeView.frame) + 10 w:kScreenWidth h:kScreenWidth];
        _iconBackView.backgroundColor = [UIColor whiteColor];
        [_tableHeaderView addSubview:_iconBackView];
    }
    else
    {
        _iconBackView = [DView viewFrameX:0 y:CGRectGetMaxY(backImg.frame) + 10 w:kScreenWidth h:kScreenWidth];
        _iconBackView.backgroundColor = [UIColor whiteColor];
        [_tableHeaderView addSubview:_iconBackView];
    }
    
    _iconArr = [NSMutableArray array];
    [self initWithIconView];
    
    frame = _tableHeaderView.frame;
    frame.size.height = CGRectGetMaxY(_iconBackView.frame);
    _tableHeaderView.frame = frame;
    
    self.baseTable.tableHeaderView = _tableHeaderView;
}

//跳转物业公告
- (void)tapPublishNoticView
{
    HWWuYePublishNoticeVC *pVC = [[HWWuYePublishNoticeVC alloc] init];
    [self pushVC:pVC];
}


- (void)callBtnClick
{
    if (_model.telArr.count != 0)
    {
        UIActionSheet *sheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles:[_model.telArr pObjectAtIndex:0], nil];
        sheet.actionSheetStyle = UIActionSheetStyleBlackTranslucent;
        [sheet showInView:self];
    }
}

#pragma mark - actionsheet
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 0)
    {
        UIWebView *callWebview = [[UIWebView alloc] init];
        [self addSubview:callWebview];
        NSURL *telUrl = [NSURL URLWithString:[NSString stringWithFormat:@"tel:%@",[_model.telArr pObjectAtIndex:0]]];
        [callWebview loadRequest:[NSURLRequest requestWithURL:telUrl]];
    }
}

#pragma mark -  icon 操作处理
- (void)queryIconData
{
    /*URL:/hw-sq-app-web/authenticateUserHome/WyListIcons.do
     入参：
     key
     villageId
     出参：
     /icon名字/
     private String name;
     /icon图标/
     private String iconMongoKey;
     /link_url/
     private String linkUrl;
     /更多 4 大类/
     private String type;*/
    
    _iconModelArr = [NSMutableArray array];
    
    NSMutableDictionary *param = [[NSMutableDictionary alloc]init];
    [param setPObject:[HWUserLogin currentUserLogin].key forKey:@"key"];
    [param setPObject:[HWUserLogin currentUserLogin].villageId forKey:@"villageId"];
    
    HWHTTPRequestOperationManager *manager = [HWHTTPRequestOperationManager manager];
    [manager POST:KWuYeIconCheck parameters:param queue:nil success:^(id responese)
     {
         NSLog(@"responese ========================= %@",responese);
         isLastPage = YES;
         
         [_iconModelArr removeAllObjects];
         
         NSArray *arr = [[responese dictionaryObjectForKey:@"data"] arrayObjectForKey:@"content"];
         for (NSDictionary *tmpDict in arr)
         {
             HWServiceIconModel *model = [[HWServiceIconModel alloc] initWithDict:tmpDict];
             [_iconModelArr addObject:model];
         }
         
         if (_iconModelArr.count % 3 != 0)
         {
             HWServiceIconModel *moreModel = [[HWServiceIconModel alloc] init];
             moreModel.name = @"敬请期待";
             moreModel.iconMongoKey = @" ";
             moreModel.linkUrl = @"more";
             moreModel.iconImgName = @"jingqingqidai";
             [_iconModelArr addObject:moreModel];
         }
         
         if (_isFinished)
         {
             [self loadUIForCompany];
         }
         else
         {
             _isFinished = YES;
         }
         
         [self doneLoadingTableViewData];
     } failure:^(NSString *code, NSString *error) {
         _isFinished = NO;
         [self doneLoadingTableViewData];
         [Utility showToastWithMessage:error inView:self];
     }];
}

- (void)commitIconChange
{
    /*URL:/hw-sq-app-web/authenticateUserHome/updateIcon.do
     入参：
     key
     villageId
     icons ----------name,name
     jsonString ----------name,iconMongoKey,linkUrl,type/name,iconMongoKey,linkUrl,type
     出参：*/
    
    HWServiceIconModel *model = [self.homePageIconArr pObjectAtIndex:0];
    NSMutableString *nameStr = [NSMutableString stringWithFormat:@"%@", model.name];
    NSMutableString *jsonStr = [NSMutableString stringWithFormat:@"%@,%@,%@,%@", model.name, model.iconMongoKey, model.linkUrl, model.modelType];
    for (int i = 1; i < self.homePageIconArr.count - 1; i++)
    {
        HWServiceIconModel *model = [self.homePageIconArr pObjectAtIndex:i];
        [nameStr appendFormat:@",%@", model.name];
        [jsonStr appendFormat:@"$%@,%@,%@,%@", model.name, model.iconMongoKey, model.linkUrl, model.modelType];
    }
    
    for (int i = 0; i < deleteArr.count; i++)
    {
        HWServiceIconModel *model = [deleteArr pObjectAtIndex:i];
        [nameStr appendFormat:@",%@", model.name];
        [jsonStr appendFormat:@"$%@,%@,%@,%@", model.name, model.iconMongoKey, model.linkUrl, model.modelType];
    }
    
    NSMutableDictionary *param = [[NSMutableDictionary alloc]init];
    [param setPObject:[HWUserLogin currentUserLogin].key forKey:@"key"];
    [param setPObject:[HWUserLogin currentUserLogin].villageId forKey:@"villageId"];
    [param setPObject:nameStr forKey:@"icons"];
    [param setPObject:jsonStr forKey:@"jsonString"];
    
    HWHTTPRequestOperationManager *manager = [HWHTTPRequestOperationManager manager];
    [manager POST:KServiceIconUpdate parameters:param queue:nil success:^(id responese)
     {
         NSLog(@"responese ========================= %@",responese);
         
         [Utility showToastWithMessage:@"已经添加到首页" inView:self];
         [self deleteIconAnimation];
         
         [[NSNotificationCenter defaultCenter] postNotificationName:@"homePageRefreshIcon" object:nil];
         
         [self doneLoadingTableViewData];
     } failure:^(NSString *code, NSString *error) {
         [self doneLoadingTableViewData];
         [deleteArr removeLastObject];
         
         [Utility showToastWithMessage:error inView:self];
     }];
}


- (void)initWithIconView
{
    CGFloat width = (kScreenWidth / 3.0f - 0.5f);
    CGFloat height = width;
    NSInteger rowNum = (_iconModelArr.count % 3 != 0 ? 1 : 0) + _iconModelArr.count / 3;
    
    for (int i = 0; i < _iconModelArr.count; i++)
    {
        if (i == 0)
        {
            for (int j = 0; j < 2; j++)
            {
                UIImageView *line = [DImageV imagV:nil frameX:width * (j + 1) + j % 3 * 0.5f y:0.0f w:0.5f h:(height + 0.5f) * rowNum];
                line.backgroundColor = THEME_COLOR_LINE;
                [_iconBackView addSubview:line];
                
                UIImageView *line2 = [DImageV imagV:nil frameX:0 y:0.0f + height * j + (j - 1) * 0.5f w:kScreenWidth h:0.5f];
                line2.backgroundColor = THEME_COLOR_LINE;
                [_iconBackView addSubview:line2];
            }
        }
        else if (i % 3 == 0)
        {
            UIImageView *line3 = [DImageV imagV:nil frameX:0 y:0.0f + height * (i / 3 + 1) + 0.5 * (i / 3) w:kScreenWidth h:0.5f];
            line3.backgroundColor = THEME_COLOR_LINE;
            [_iconBackView addSubview:line3];
        }
        
        HWServiceIconModel *model = [_iconModelArr pObjectAtIndex:i];
        HWServiceIcon *icon = [[HWServiceIcon alloc] initWithFrame:CGRectMake(width * (i % 3) + i % 3 * 0.5f, 0.0f + height * (i / 3) + i / 3 * 0.5f, width, height) model:model isDelImg:NO];
        icon.iconModelArr = _iconModelArr;
        icon.iconArr = _iconArr;
        [icon addTarget:self action:@selector(tapAction:) forIconEvents:IconTap];
        [icon addTarget:self action:@selector(iconLongPressBegain:) forIconEvents:IconLongPressBegain];
        [icon addTarget:self action:@selector(iconLongPressEnd:) forIconEvents:IconLongPressEnd];
        [icon addTarget:self action:@selector(IconPanChange:) forIconEvents:IconPanChange];
        [icon addTarget:self action:@selector(iconPanEnd:) forIconEvents:IconPanEnd];
        [icon addTarget:self action:@selector(iconDelBtnClick:) forIconEvents:iconDel];
        [_iconBackView addSubview:icon];
        [_iconArr addObject:icon];
    }
    
    _iconBackView.frame = CGRectMake(_iconBackView.frame.origin.x, _iconBackView.frame.origin.y, kScreenWidth, (height + 0.5f) * rowNum);
}

- (void)pushVCByIconModel:(HWServiceIconModel *)model
{
    NSString *linkUrl = [model.linkUrl lowercaseString];
    NSArray *strArr = [linkUrl componentsSeparatedByString:@":"];
    
    NSString *headStr = [strArr pObjectAtIndex:0];
    if ([headStr isEqualToString:@"kaola"])
    {
        // 应用内跳转
        NSString *secStr = [strArr pObjectAtIndex:1];
        if ([secStr isEqualToString:@"wyfw"]) //物业
        {
            NSString *thirdStr = [strArr pObjectAtIndex:2];
            if ([thirdStr isEqualToString:@"jiaofei"])//缴费 KaoLa:WYFW:JIAOFEI
            {
                [self pushVCByClassStr:@"HWWuYePayVC"];
            }
            else if ([thirdStr isEqualToString:@"tousuzhongxin"])//投诉 KaoLa:WYFW:TOUSUZHONGXIN
            {
                [self pushVCByClassStr:@"HWPerpotyComplaintVC"];
            }
            else if ([thirdStr isEqualToString:@"gongwubaoxiu"])//报修 KaoLa:WYFW:GONGWUBAOXIU
            {
                [self pushVCByClassStr:@"HWPublicRepairVC"];
            }
            else if ([thirdStr isEqualToString:@"fangkeyaoqing"])//访客 KaoLa:WYFW:FANGKEYAOQING
            {
                [self pushVCByClassStr:@"HWInviteCustomVC"];
            }
            else if ([thirdStr isEqualToString:@"kuaididaishou"])//邮局 KaoLa:WYFW:KUAIDIDAISHOU
            {
                [self pushVCByClassStr:@"HWPostOfficeVC"];
            }
        }
        else if ([secStr isEqualToString:@"wysm"])//Kaola:WYSM:BAOJIEFUWU{3}
        {
            NSString *detailStr = [strArr pObjectAtIndex:3];
            
            if ([detailStr hasPrefix:@"{"] && [detailStr hasSuffix:@"}"])
            {
                if (detailStr.length < 3)
                {
                    NSLog(@"id 不能为空");
                }
                else
                {
                    [self pushVCForShangMenFuWu:model serviceId:[detailStr substringWithRange:NSMakeRange(1, detailStr.length - 2)]];
                }
            }
        }
    }
    else
    {
        // web页面
//        HWApplicationDetailViewController *appDetailVC = [[HWApplicationDetailViewController alloc] init];
//        appDetailVC.navigationItem.titleView = [Utility navTitleView:model.name];
//        appDetailVC.appUrl = model.linkUrl;
//        [self.navigationController pushViewController:appDetailVC animated:YES];
    }
}

//普通类型（不需要参数）
- (void)pushVCByClassStr:(NSString *)classStr
{
    if (classStr.length  != 0)
    {
        Class clss = NSClassFromString(classStr);
        if (clss)
        {
            if ([classStr isEqualToString:@"HWInviteCustomVC"])
            {
                if ([HWUserLogin verifyBindMobileWithPopVC:self.fatherVC showAlert:YES])
                {
                    HWBaseViewController *vc = [(HWBaseViewController *)[clss alloc] init];
                    if ([HWUserLogin verifyIsLoginWithPresentVC:self.fatherVC toViewController:vc])
                    {
                        [self pushVC:vc];
                    }
                }
            }
            else if ([classStr isEqualToString:@"HWPublicRepairVC"])
            {
                if ([HWUserLogin verifyBindMobileWithPopVC:self.fatherVC showAlert:YES])
                {
                    HWBaseViewController *vc = [(HWBaseViewController *)[clss alloc] init];
                    if ([HWUserLogin verifyIsLoginWithPresentVC:self.fatherVC toViewController:vc])
                    {
                        [self pushVC:vc];
                    }
                }
            }
            else if ([classStr isEqualToString:@"HWPerpotyComplaintVC"])
            {
                if ([HWUserLogin verifyBindMobileWithPopVC:self.fatherVC showAlert:YES])
                {
                    HWBaseViewController *vc = [(HWBaseViewController *)[clss alloc] init];
                    if ([HWUserLogin verifyIsLoginWithPresentVC:self.fatherVC toViewController:vc])
                    {
                        [self pushVC:vc];
                    }
                }
            }
            else if ([classStr isEqualToString:@"HWPostOfficeVC"])
            {
                if ([HWUserLogin verifyBindMobileWithPopVC:self.fatherVC showAlert:YES])
                {
                    HWBaseViewController *vc = [(HWBaseViewController *)[clss alloc] init];
                    if ([HWUserLogin verifyIsLoginWithPresentVC:self.fatherVC toViewController:vc])
                    {
                        [self pushVC:vc];
                    }
                }
            }
            else if ([clss isSubclassOfClass:[HWBaseViewController class]])
            {
                HWBaseViewController *vc = [(HWBaseViewController *)[clss alloc] init];
                [self pushVC:vc];
            }
        }
    }
}

//上门服务类型
- (void)pushVCForShangMenFuWu:(HWServiceIconModel *)model serviceId:(NSString *)serviceId
{
    if ([HWUserLogin verifyBindMobileWithPopVC:self.fatherVC showAlert:YES])
    {
        HWHomeServiceVC *hvc = [[HWHomeServiceVC alloc] init];
        hvc.navTitleStr = model.name;
        hvc.serviceId = serviceId;
        if ([HWUserLogin verifyIsLoginWithPresentVC:self.fatherVC toViewController:hvc])
        {
            [self pushVC:hvc];
        }
    }
}


#pragma mark - icon 操作事件
- (CGPoint)getTargetCenter:(NSInteger)index
{
    CGFloat width = (kScreenWidth / 3.0f - 0.5f);
    CGFloat x = (index % 3 + 0.5f) * width + index % 3 * 0.5f;
    CGFloat y = (index / 3 + 0.5f) * width + index / 3 * 0.5f;
    return CGPointMake(x, y);
}

- (void)iconLongPressBegain:(UILongPressGestureRecognizer *)press
{
    //    NSLog(@"iconLongPressBegain");
    
    HWServiceIcon *icon = (HWServiceIcon *)press.view;
    _iconTouchPoint = [press locationInView:icon];
    if (_currentIcon != icon)
    {
        [_currentIcon hideDelBtnAnimation];
        _currentIcon = icon;
    }
    
    if ([icon.model.name isEqualToString:@"敬请期待"])
    {
        [Utility showToastWithMessage:@"不可移动哦" inView:self];
    }
    else
    {
        [icon.superview bringSubviewToFront:_currentIcon];
        
        CGPoint begainPoint = CGPointMake(_currentIcon.center.x, _currentIcon.center.y);
        [_currentIcon longPressBegainAction:begainPoint];
    }
    
    self.baseTable.scrollEnabled = NO;
}

- (void)iconLongPressEnd:(UILongPressGestureRecognizer *)press
{
    //    NSLog(@"iconLongPressEnd");
    
    NSInteger targetIndex = [self getTargetIndex];
    HWServiceIcon *icon = (HWServiceIcon *)press.view;
    if (targetIndex != -1)
    {
        NSLog(@"icon.frame) %@", NSStringFromCGRect(icon.frame));
        CGPoint endPoint = [self getTargetCenter:targetIndex];
        [_currentIcon longPressEndAction:endPoint];
    }
    else
    {
        CGPoint endPoint = [self getTargetCenter:[icon.iconModelArr indexOfObject:_currentIcon.model]];
        [_currentIcon longPressEndAction:endPoint];
    }
    
    self.baseTable.scrollEnabled = YES;
}

- (void)IconPanChange:(UIPanGestureRecognizer *)pan
{
    //    NSLog(@"拖动手势Change");
    
}

- (void)reloadViewAndIconArr:(NSInteger)lastIndex targetIndex:(NSInteger)targetIndex
{
    if (lastIndex < targetIndex)
    {
        NSLog(@"下移");
        for (int i = (int)lastIndex + 1; i <= targetIndex; i++)
        {
            HWServiceIcon *icon = [_iconArr pObjectAtIndex:i];
            HWServiceIcon *tmpIcon = [_iconArr pObjectAtIndex:i - 1];
            
            [UIView animateWithDuration:0.2 animations:^{
                icon.center = [self getTargetCenter:i - 1];
                
            } completion:^(BOOL finished) {
                
            }];
            
            [_iconArr replaceObjectAtIndex:i-1 withObject:icon];
            [_iconArr replaceObjectAtIndex:i withObject:tmpIcon];
            [_iconModelArr replaceObjectAtIndex:i-1 withObject:icon.model];
            [_iconModelArr replaceObjectAtIndex:i withObject:tmpIcon.model];
        }
    }
    else
    {
        NSLog(@"上移");
        for (int i = (int)lastIndex - 1; i >= targetIndex; i--)
        {
            HWServiceIcon *icon = [_iconArr pObjectAtIndex:i];
            HWServiceIcon *tmpIcon = [_iconArr pObjectAtIndex:i + 1];
            
            [UIView animateWithDuration:0.2 animations:^{
                icon.center = [self getTargetCenter:i + 1];
                
            } completion:^(BOOL finished) {
                
            }];
            
            [_iconArr replaceObjectAtIndex:i + 1 withObject:icon];
            [_iconArr replaceObjectAtIndex:i withObject:tmpIcon];
            [_iconModelArr replaceObjectAtIndex:i + 1 withObject:icon.model];
            [_iconModelArr replaceObjectAtIndex:i withObject:tmpIcon.model];
        }
    }
}

- (void)iconPanEnd:(UIPanGestureRecognizer *)pan
{
    self.baseTable.scrollEnabled = YES;
}

- (void)iconDelBtnClick:(HWServiceIcon *)icon
{
    NSLog(@"iconDelBtnClick");
    
    if (deleteArr.count + self.homePageIconArr.count >= 9)
    {
        [Utility showToastWithMessage:@"首页没有位置了" inView:self];
        [icon hideDelBtnAnimation];
        _currentIcon = nil;
        return;
    }
    
    [deleteArr addObject:icon.model];
    
    [self commitIconChange];
}

- (void)deleteIconAnimation
{
    NSMutableArray *iconModelArr = (NSMutableArray *)_currentIcon.iconModelArr;
    
    NSInteger lastIndex = [iconModelArr indexOfObject:_currentIcon.model];
    NSInteger targetIndex = iconModelArr.count -1;
    
    [UIView animateWithDuration:0.3 animations:^{
        _currentIcon.alpha = 0.3;
        _currentIcon.transform = CGAffineTransformScale(_currentIcon.transform, 0.3, 0.3);
    } completion:^(BOOL finished) {
        _currentIcon.alpha = 0.0f;
        [_currentIcon removeFromSuperview];
        [self reloadViewAndIconArr:lastIndex targetIndex:targetIndex];
        [iconModelArr removeObject:_currentIcon.model];
        [_iconArr removeObject:_currentIcon];
        if (iconModelArr.count % 4 == 0)
        {
            [self queryListData];
        }
        _currentIcon = nil;
    }];
}

- (void)tapAction:(UITapGestureRecognizer *)tap
{
    HWServiceIcon *icon = (HWServiceIcon *)tap.view;
    if (_currentIcon.isDelBtnShow)
    {
        NSLog(@"tap hideDelBtnAnimation");
        [_currentIcon hideDelBtnAnimation];
    }
    else
    {
        [self pushVCByIconModel:icon.model];
    }
}

- (void)pushVC:(UIViewController *)vc
{
    if (self.delegate && [self.delegate respondsToSelector:@selector(pushViewController:)])
    {
        [self.delegate pushViewController:vc];
    }
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    [super scrollViewDidScroll:scrollView];
    [_currentIcon hideDelBtnAnimation];
}

- (NSInteger)getTargetIndex
{
    int width = kScreenWidth / 3.0f;
    
    int currentx = _currentIcon.center.x;
    int currenty = _currentIcon.center.y;
    
    if (currentx < 0 || currentx > kScreenWidth || currenty < CGRectGetMinY(_currentIcon.superview.frame) || currenty > CGRectGetMaxY(_currentIcon.superview.frame))
    {
        return -1;
    }
    
    NSInteger TargetIndex = (currentx / width) + 3 * (currenty / width);
    return TargetIndex;
}






#pragma mark - 非合作物业情况

#pragma mark - 非合作物业UI
- (void)loadUIForUnCompany
{
    _tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, 500)];
    
    DImageV *backImg = [DImageV imagV:@"" frameX:0 y:0 w:kScreenWidth h:100.0f];
    backImg.backgroundColor = THEME_COLOR_ORANGE;
    backImg.userInteractionEnabled = YES;
    [_tableHeaderView addSubview:backImg];
    
    DImageV *headImg = [DImageV imagV:@"icon_personal" frameX:15 y:20 w:55.0f h:55.0f];
    [headImg setRadius:headImg.frame.size.width / 2.0f];
    [backImg addSubview:headImg];
    
    DLable *titleLab = [DLable LabTxt:@"考拉大本营" txtFont:TF18 txtColor:THEME_COLOR_White frameX:CGRectGetMaxX(headImg.frame) + 10 y:37 w:kScreenWidth - 2 * 15 - 40 - 55 - 10 h:20];
    [backImg addSubview:titleLab];
    
    DButton *editPropertyBtn = [DButton btnImg:@"icon_editor" frameX:kScreenWidth - 15 - 41 y:25.0f w:41.0f h:41.0f target:self action:@selector(editPropertyBtnClick)];
    [backImg addSubview:editPropertyBtn];
    
    DImageV *midImg = [DImageV imagV:@"property_bg3_1" frameX:(kScreenWidth - 170) / 2.0f y:CGRectGetMaxY(backImg.frame) + 65.0f w:182.0f h:170.0f];
    [_tableHeaderView addSubview:midImg];
    
    DImageV *midHeaderImg = [DImageV imagV:@"property_bg3_2" frameX:70.0f y:CGRectGetMaxY(backImg.frame) + 22.0f w:130.0f h:60.0f];
    [_tableHeaderView addSubview:midHeaderImg];
    
    NSString *numStr = [NSString stringWithFormat:@"已有%@人呼唤了物业", _callNum];
    DLable *midLab = [DLable LabTxt:numStr txtFont:TF15 frameX:20.0f y:6.0f w:130.0f - 40.0f h:35.0f];
    midLab.textColor = THEME_COLOR_White;
    [midHeaderImg addSubview:midLab];
    
    DButton *callWuYeBtn = [DButton btnTxt:@"呼唤物业" txtFont:TF18 frameX:15 y:CGRectGetMaxY(midImg.frame) + 15 w:kScreenWidth - 2 * 15 h:45.0f target:self action:@selector(callWuYeBtnClick)];
    [callWuYeBtn setStyle:DBtnStyleMain];
    [callWuYeBtn setRadius:3.5f];
    [_tableHeaderView addSubview:callWuYeBtn];
    
    DLable *buttomLab = [DLable LabTxt:@"挤满了100人一起呼唤,物业就有可能会出现哦" txtFont:TF14 txtColor:THEME_COLOR_TEXT frameX:0 y:CGRectGetMaxY(callWuYeBtn.frame) + 20 w:kScreenWidth h:15.0f];
    buttomLab.textAlignment = NSTextAlignmentCenter;
    [_tableHeaderView addSubview:buttomLab];
    
    NSString * str = @"<a href='找朋友一起呼唤→'><u>找朋友一起呼唤→</u></a>";
    
    RTLabel * lab = [[RTLabel alloc] initWithFrame:CGRectMake(15, CGRectGetMaxY(buttomLab.frame) + 10, kScreenWidth - 30,  18.0f)];
    lab.delegate = self;
    lab.backgroundColor = [UIColor clearColor];
    lab.textColor = THEME_COLOR_TEXT;
    lab.textAlignment = RTTextAlignmentCenter;
    lab.font = [UIFont fontWithName:FONTNAME size:THEME_FONT_SMALL];
    [lab setText:str];
    lab.linkAttributes = @{@"color":@"#8acf1c",@"underline":@"#8acf1c"};
    lab.selectedLinkAttributes = @{@"color":@"#77b218",@"underline":@"#77b218"};
    [_tableHeaderView addSubview:lab];
    
    CGRect frame = _tableHeaderView.frame;
    frame.size.height = CGRectGetMaxY(lab.frame) + 80;
    _tableHeaderView.frame = frame;
    
    self.baseTable.tableHeaderView = _tableHeaderView;
}

- (void)rtLabel:(id)rtLabel didSelectLinkWithURL:(NSURL *)url
{
    TwoDimensionExtendViewController *inviteFriendV = [[TwoDimensionExtendViewController alloc]init];
    [self pushVC:inviteFriendV];
}

- (void)checkCallNum
{
    /*接口1：查询呼唤数量
     hw-sq-ap-web/wy/queryCallTenementCount.do
     入参：key=6f5ddc33-b076-422c-bdc0-c099a0d14717
     出参：
     {
     'status': '1',
     'data': 3,---呼唤次数
     'detail': '请求数据成功!',
     'key': '6f5ddc33-b076-422c-bdc0-c099a0d14717'
     }*/
    
    NSMutableDictionary *param = [[NSMutableDictionary alloc]init];
    [param setPObject:[HWUserLogin currentUserLogin].key forKey:@"key"];
    
    HWHTTPRequestOperationManager *manager = [HWHTTPRequestOperationManager manager];
    [manager POST:KCallWuYeNum parameters:param queue:nil success:^(id responese)
     {
         NSLog(@"responese ========================= %@",responese);
         
         _callNum = [responese stringObjectForKey:@"data"];
         [self loadUIForUnCompany];
         
         [self doneLoadingTableViewData];
     } failure:^(NSString *code, NSString *error) {
         [self doneLoadingTableViewData];
         [Utility showToastWithMessage:error inView:self];
         
         if (_callNum == nil)
         {
             _callNum = @"0";
             [self loadUIForUnCompany];
         }
     }];
}

- (void)editPropertyBtnClick
{
    HWPerfectPropertyDataVC *perfect = [[HWPerfectPropertyDataVC alloc] init];
    perfect.isProperty = NO;
    [self pushVC:perfect];
}

- (void)callWuYeBtnClick
{
    /*接口2：呼唤物业
     hw-sq-app-web/wy/callTenement.do
     入参：key=6f5ddc33-b076-422c-bdc0-c099a0d14717
     出参：
     {
     'status': '1',
     'data': '',
     'detail': '请求数据成功!',
     'key': '6f5ddc33-b076-422c-bdc0-c099a0d14717'
     }*/
    NSMutableDictionary *param = [[NSMutableDictionary alloc]init];
    [param setPObject:[HWUserLogin currentUserLogin].key forKey:@"key"];
    
    HWHTTPRequestOperationManager *manager = [HWHTTPRequestOperationManager manager];
    [manager POST:KCallWuYeForUnCompany parameters:param queue:nil success:^(id responese)
     {
         NSLog(@"responese ========================= %@",responese);
         
         [Utility showToastWithMessage:@"呼唤成功" inView:self];
         [self queryListData];
         
         [self doneLoadingTableViewData];
     } failure:^(NSString *code, NSString *error) {
         [self doneLoadingTableViewData];
         [Utility showToastWithMessage:error inView:self];
     }];
}


@end
