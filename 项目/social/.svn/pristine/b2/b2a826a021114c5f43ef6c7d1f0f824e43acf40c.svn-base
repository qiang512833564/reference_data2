//
//  HWCommondityDetailView.m
//  Community
//
//  Created by ryder on 7/30/15.
//  Copyright (c) 2015 caijingpeng. All rights reserved.
//
//  功能描述：
//      天天团商品详情页面
//  修改记录：
//      姓名         日期              修改内容
//     程耀均     2015-07-30           创建文件

#import "HWCommondityDetailView.h"
#import "HWSubmitOrderView.h"
#import "HWApplicationDetailViewController.h"

@interface HWCommondityDetailView ()
{
    NSString *_goodsId;
}
@property (nonatomic, strong) UILabel *soldedLabel;
@property (nonatomic, strong) UILabel *remainTimeLabel;
@property (nonatomic, strong) UILabel *desrciptionLabel;
@property (nonatomic, strong) UILabel *currentPriceLabel;
@property (nonatomic, strong) UILabel *originalPriceLabel;
@property (nonatomic, strong) UILabel *purchaseLimitsCountLabel;
@property (nonatomic, strong) UILabel *postageLabel;

@property (nonatomic, strong) UIScrollView *scrollView;
@property (nonatomic, strong) UIImageView *commondityImageView;
@property (nonatomic, strong) UIView *brandView;
@property (nonatomic, strong) UIView *intructionView;
@property (nonatomic, strong) UIButton *paymentButton;
@property (nonatomic, strong) HWCommondityModel *commondityModel;
@property (nonatomic, strong) UITextView *brandInfoTextView;
@property (nonatomic, strong)  NSTimer *timer;
@end

@implementation HWCommondityDetailView

- (instancetype)initWithFrame:(CGRect)frame goodsId:(NSString *)goodsId;
{
    if (self = [super initWithFrame:frame])
    {
        _goodsId = goodsId;
        [self queryListData];
    }
    return self;
}

- (void)queryListData
{
    /*url：http://172.16.10.110:8080/hw-sq-app-web/grpBuyGoods/getGrpBuyGoodDetail.do
     输入参数说明：
     key：考拉社区登录成功用户被授权的key(必填)
     goodsId：被查看的商品id(必填)
     
     输出结果：
     
     {
     status: "1",
     data:
     { goodsId: 10349274824, goodsName: "红苹果", startTime: 1437840000000, endTime: 1438240641000, marketPrice: 20.44, sellPrice: 50, costPrice: null, postage: 5, freePostageType: 0, freePostageNum: 3, freePostageAmount: 20, bigImg: null, smallImg: "xxx1", orderImg: null, showDistanceEndTime: 1, showDistanceStartTime: 1, stock: null, surplusStock: null, reduceStockType: null, brand: "西部商贸有限公司", brandUrl: "www.baidu.com", showSurplus: null, limitCount: 10, goodsRemark: "xxx5", goodsInfo: "xxx4", buyGoodsCount: 1, currentTime: 1438254270534, isAuthBuy: null, status: "3", creater: null, createTime: null, modifier: null, modifyTime: null, version: null, disabled: null, surplusStock:30 }
     ,
     detail: "请求数据成功!",
     key: "3e801f50-10d8-44d7-9ce7-83e57fe582f1"
     }*/
    
    HWHTTPRequestOperationManager *manager = [HWHTTPRequestOperationManager manager];
    NSMutableDictionary *dictionary = [NSMutableDictionary dictionary];
    [dictionary setPObject:[HWUserLogin currentUserLogin].key forKey:@"key"];
    [dictionary setPObject:_goodsId forKey:@"goodsId"];
    
    [manager POST:kTianTianTuanQueryCommondityDetails parameters:dictionary queue:nil success:^(id responese) {
        
        NSLog(@"商品详情:%@", responese);
        isLastPage = YES;
        NSDictionary *dataDict = [responese dictionaryObjectForKey:@"data"];
        
        _detailModel = [[HWCommondityDetailModel alloc] initWithdictionary:dataDict];
        
        [self loadDataAndUI];
        [self doneLoadingTableViewData];
        
    } failure:^(NSString *code, NSString *error) {
        NSLog(@"error :%@", error);
        [self doneLoadingTableViewData];
        
        [Utility hideMBProgress:self];
        [Utility showToastWithMessage:error inView:self];
    }];
}

- (void)loadDataAndUI
{
    [self loadTableViewHeaderView];
    [self.baseTable reloadData];
    
    if (self.rDelegate && [self.rDelegate respondsToSelector:@selector(showShareBtn:)])
    {
        [self.rDelegate showShareBtn:YES];
    }
    
    //请求分享img 分享使用
    __weak UIImageView *weakImgV = self.shareImg;
    [self.shareImg setImageWithURL:[NSURL URLWithString:[Utility imageDownloadWithMongoDbKey:_detailModel.orderImg]] placeholderImage:[UIImage imageNamed:IMAGE_PLACE] completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType) {
        
        if (error != nil)
        {
            weakImgV.image = [UIImage imageNamed:IMAGE_BREAK_CUBE];
        }
        else
        {
            weakImgV.image = image;
        }
    }];
}

- (void)loadTableViewHeaderView
{
    DView *tableHeadView = [[DView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, 200)];
    tableHeadView.backgroundColor = THEME_COLOR_White;
    
    DImageV *topImgV = [DImageV imagV:nil frameX:0 y:0 w:kScreenWidth h:200];
    topImgV.contentMode = UIViewContentModeScaleAspectFill;
    topImgV.clipsToBounds = YES;
    __weak UIImageView *weakImgV = topImgV;
    [topImgV setImageWithURL:[NSURL URLWithString:[Utility imageDownloadWithMongoDbKey:_detailModel.smallImg]] placeholderImage:[UIImage imageNamed:IMAGE_PLACE] completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType) {
        
        if (error != nil)
        {
            weakImgV.image = [UIImage imageNamed:IMAGE_BREAK_CUBE];
        }
        else
        {
            weakImgV.image = image;
        }
    }];
    [tableHeadView addSubview:topImgV];
    
    CGFloat descriptH = [Utility calculateStringHeight:_detailModel.goodsRemark font:FONT(TF16) constrainedSize:CGSizeMake(kScreenWidth - 2 * 10, 100000)].height;
    
    CGFloat goodNameH = [Utility calculateStringHeight:_detailModel.goodsName font:FONT(TF16) constrainedSize:CGSizeMake(kScreenWidth - 2 * 10, 100000)].height;
    
    DView *goodInfoBackView = [DView viewFrameX:0 y:200 - 9 - descriptH - goodNameH - 9 - 5 w:kScreenWidth h:9 + descriptH + goodNameH + 9 + 5];
    goodInfoBackView.backgroundColor = [UIColor colorWithWhite:0.1 alpha:0.3];
    [tableHeadView addSubview:goodInfoBackView];
    
    DLable *gooNameLab = [DLable LabTxt:_detailModel.goodsName txtFont:TF16 txtColor:THEME_COLOR_White frameX:10 y:7 w:kScreenWidth - 2 * 10 h:goodNameH];
    [goodInfoBackView addSubview:gooNameLab];
    
    DLable *descriptionLab = [DLable LabTxt:_detailModel.goodsRemark txtFont:TF16 txtColor:THEME_COLOR_White frameX:10 y:CGRectGetMaxY(gooNameLab.frame) + 5 w:kScreenWidth - 2 * 10 h:descriptH];
    [goodInfoBackView addSubview:descriptionLab];
    
    self.baseTable.tableHeaderView = tableHeadView;
}

- (void)startTimerFire
{
    _timer = [NSTimer scheduledTimerWithTimeInterval:1
                                              target:self
                                            selector:@selector(updateTimer)
                                            userInfo:nil
                                             repeats:YES];
}

- (void)updateTimer
{
     [self setRemainTime:[Utility calculateRemainedTimeWithCurrentTime:_detailModel.currentTime startTime:_detailModel.startTime endTime:_detailModel.endTime status:_detailModel.status]];
}
- (void)purchase:(UIButton *)button
{
    if ([_detailModel.status integerValue] == HWCommondityStatusSelling)
    {
        if ([_detailModel.isAuthBuy isEqualToString:@"1"])
        {
            if ([HWUserLogin verifyBindMobileWithPopVC:self.superVC showAlert:YES])
            {
                if ([HWUserLogin verifyIsLoginWithPresentVC:self.superVC toViewController:nil])
                {
                    if ([HWUserLogin verifyIsAuthenticationWithPopVC:self.superVC showAlert:YES])
                    {
                        HWSubmitOrderView *submitOrderView = [[HWSubmitOrderView alloc] initWithModel:_detailModel];
                        submitOrderView.delegate = self;
                        [self addSubview:submitOrderView];
                    }
                }
            }
        }
        else
        {
            if ([HWUserLogin verifyBindMobileWithPopVC:self.superVC showAlert:YES])
            {
                if ([HWUserLogin verifyIsLoginWithPresentVC:self.superVC toViewController:nil])
                {
                    HWSubmitOrderView *submitOrderView = [[HWSubmitOrderView alloc] initWithModel:_detailModel];
                    submitOrderView.delegate = self;
                    [self addSubview:submitOrderView];
                }
            }
        }
    }
}

- (void)setStatus:(HWCommonditySaleStatus)status payBtn:(UIButton *)payBtn
{
    UIColor *grayColor = [UIColor colorWithRed:204/255.f
                                         green:205/255.f
                                          blue:204/255.f
                                         alpha:1.f];
    [payBtn setBackgroundColor:grayColor];
    [payBtn setBackgroundImage:[UIImage imageNamed:@"已售完"] forState:UIControlStateNormal];
    switch (status) {
        case HWCommonditySaleStatusWillStarting:
            [payBtn setTitle:@"即将开始" forState:UIControlStateNormal];
            break;
        case HWCommonditySaleStatusPurchase:
            [payBtn setBackgroundImage:[UIImage imageNamed:@"付款"] forState:UIControlStateNormal];
            [payBtn setBackgroundImage:[UIImage imageNamed:@"付款点击色"] forState:UIControlStateSelected];
            [payBtn setTitle:@"立即购买" forState:UIControlStateNormal];
            break;
        case HWCommonditySaleStatusSellOut:
            [payBtn setTitle:@"已售完" forState:UIControlStateNormal];
            break;
        case HWCommonditySaleStatusOff:
            [payBtn setTitle:@"已下架" forState:UIControlStateNormal];
            break;
        case HWCommonditySaleStatusAwatingPayment:
            [payBtn setTitle:@"等待待款" forState:UIControlStateNormal];
            break;
        case HWCommonditySaleStatusAwatingShipment:
            [payBtn setTitle:@"等待发货" forState:UIControlStateNormal];
            break;
        case HWCommonditySaleStatusShiped:
            [payBtn setTitle:@"已发货" forState:UIControlStateNormal];
            break;
        case HWCommonditySaleStatusRefunded:
            [payBtn setTitle:@"已退款" forState:UIControlStateNormal];
            break;
        default:
            break;
    }
}


#pragma mark -
#pragma mark HWCommondityDelegate
- (void)didSubmitOrder:(NSInteger)count price:(CGFloat)total orderId:(NSString *)orderId
{
    if ([self.delegate respondsToSelector:@selector(didSubmitOrder:price:orderId:)]) {
        [self.delegate didSubmitOrder:count price:total orderId:orderId];
    }
}

#pragma mark - UITableViewDelegate

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 65.0f;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    DView *sctionView = [DView viewFrameX:0 y:0 w:kScreenWidth h:65.0f];
    sctionView.backgroundColor = THEME_COLOR_White;
    [Utility bottomLine:sctionView];
    
    NSString *sellPriceStr = _detailModel.sellPrice.length > 0 ? _detailModel.sellPrice : @"0";
    sellPriceStr = [NSString stringWithFormat:@"￥%@", sellPriceStr];
    CGFloat width = [Utility calculateStringWidth:sellPriceStr font:FONT(TF28) constrainedSize:CGSizeMake(10000, 30)].width;
    DLable *sellPriceLab = [DLable LabTxt:sellPriceStr txtFont:TF28 txtColor:THEME_COLOR_RED frameX:15 y:9 w:width h:30];
    [sctionView addSubview:sellPriceLab];
    
    NSString *marketPriceStr = _detailModel.marketPrice.length > 0 ? [NSString stringWithFormat:@"￥%@", _detailModel.marketPrice] : @"";
    width = [Utility calculateStringWidth:marketPriceStr font:FONT(TF15) constrainedSize:CGSizeMake(100000, 16)].width;
    DLable *marketLab = [DLable LabTxt:marketPriceStr txtFont:TF15 txtColor:THEME_COLOR_TEXT frameX:CGRectGetMaxX(sellPriceLab.frame) + 6 y:CGRectGetMaxY(sellPriceLab.frame) - 16 w:width h:16];
    [sctionView addSubview:marketLab];
    
    CALayer *redLine = [DView layerFrameX:CGRectGetMinX(marketLab.frame) + 2 y:CGRectGetMaxY(marketLab.frame) - 8 w:width h:0.5f];
    redLine.backgroundColor = THEME_COLOR_RED.CGColor;
    [sctionView.layer addSublayer:redLine];
    
    DImageV *postIcon = [DImageV imagV:@"邮费" frameX:15 y:CGRectGetMaxY(sellPriceLab.frame) + 5 w:13 h:11.5f];
    [sctionView addSubview:postIcon];
    
    NSString *postageStr = @"";
    if (_detailModel.postage.length == 0 || [_detailModel.postage isEqualToString:@"0"])
    {
        postageStr = @"免邮";
    }
    else
    {
        if ([_detailModel.freePostageType isEqualToString:@"0"])//免邮类型(0金额， 1分数， 2不免邮)
        {
            postageStr = [NSString stringWithFormat:@"邮费：￥%@(满%@元包邮)", _detailModel.postage, _detailModel.freePostageAmount];
        }
        else if ([_detailModel.freePostageType isEqualToString:@"1"])
        {
            postageStr = [NSString stringWithFormat:@"邮费：￥%@(满%@份包邮)", _detailModel.postage, _detailModel.freePostageNum];
        }
        else if ([_detailModel.freePostageType isEqualToString:@"2"])
        {
            postageStr = [NSString stringWithFormat:@"%@", _detailModel.postage];
        }
    }
    
    DLable *postageLab = [DLable LabTxt:postageStr txtFont:TF12 txtColor:THEME_COLOR_TEXT frameX:CGRectGetMaxX(postIcon.frame) + 5 y:CGRectGetMinY(postIcon.frame) w:300 h:13];
    [sctionView addSubview:postageLab];
    
    DButton *payBtn = [DButton btnTxt:@"立即购买" txtFont:TF17 frameX:kScreenWidth - 15 - 95 y:15 w:95.0f h:35.0f target:self action:@selector(purchase:)];
    [self setStatus:[_detailModel.status integerValue] payBtn:payBtn];
    //    [payBtn setBackgroundImage:[UIImage imageNamed:@"付款"] forState:UIControlStateNormal];
    //    [payBtn setBackgroundImage:[UIImage imageNamed:@"付款点击色"] forState:UIControlStateSelected];
    [payBtn setStyle:DBtnStyleRed];
    [payBtn setRadius:3.5f];
    [sctionView addSubview:payBtn];
    
    return sctionView;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *cellID = @"cellID";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];
    if (!cell)
    {
        cell = [[HWBaseTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellID];
    }
    
    for (UIView *subViews in cell.contentView.subviews)
    {
        if ([subViews isKindOfClass:[UIView class]])
        {
            [subViews removeFromSuperview];
        }
    }
    
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.contentView.backgroundColor = BACKGROUND_COLOR;
    [cell.contentView addSubview:[self cellContentView]];
    
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UIView *cellContentV = [self cellContentView];
    return CGRectGetHeight(cellContentV.frame);
}

- (UIView *)cellContentView
{
    DView *cellContetView = [DView viewFrameX:0 y:0 w:kScreenWidth h:10];
    
    DView *topBackV = [DView viewFrameX:0 y:0 w:kScreenWidth h:35.0f];
    topBackV.backgroundColor = THEME_COLOR_White;
    [cellContetView addSubview:topBackV];
    
    CALayer *topViewMiddleLine = [DView layerFrameX:0 y:0 w:kScreenWidth h:0.5f];
    [topBackV.layer addSublayer:topViewMiddleLine];
    
    DImageV *soldedImgV = [DImageV imagV:@"已售" frameX:15 y:CGRectGetMaxY(topViewMiddleLine.frame) + 6 w:16 h:15];
    [topBackV addSubview:soldedImgV];
    
    NSString *soldedStr = _detailModel.buyGoodsCount.length > 0 ? _detailModel.buyGoodsCount : @"0";
    soldedStr = [NSString stringWithFormat:@"已售%@份", soldedStr];
    CGFloat width = [Utility calculateStringWidth:soldedStr font:FONT(TF13) constrainedSize:CGSizeMake(10000, 15)].width;
    DLable *soldedLab = [DLable LabTxt:soldedStr txtFont:TF13 txtColor:THEME_COLOR_TEXT frameX:CGRectGetMaxX(soldedImgV.frame) + 6 y:CGRectGetMinY(soldedImgV.frame) w:width h:15];
    [topBackV addSubview:soldedLab];
    
    if (_detailModel.limitCount.intValue > 0)
    {
        DImageV *limitImg = [DImageV imagV:@"限购" frameX:CGRectGetMaxX(soldedLab.frame) + 25 y:CGRectGetMinY(soldedImgV.frame) w:14.5f h:15];
        [topBackV addSubview:limitImg];
        
        NSString *limitStr = [NSString stringWithFormat:@"限购%@份", _detailModel.limitCount];
        DLable *limitLab = [DLable LabTxt:limitStr txtFont:TF13 txtColor:THEME_COLOR_TEXT frameX:CGRectGetMaxX(limitImg.frame) + 4 y:CGRectGetMinY(soldedImgV.frame) w:100 h:15];
        [topBackV addSubview:limitLab];
    }
    
    NSString *remainTimeStr = [Utility calculateRemainedTimeWithCurrentTime:_detailModel.currentTime startTime:_detailModel.startTime endTime:_detailModel.endTime status:_detailModel.status];
    width = [Utility calculateStringWidth:remainTimeStr font:FONT(TF13) constrainedSize:CGSizeMake(10000, 14)].width;
    DLable *remainLab = [DLable LabTxt:remainTimeStr txtFont:TF13 txtColor:THEME_COLOR_ORANGE frameX:kScreenWidth - 15 - width y:CGRectGetMinY(soldedImgV.frame) w:width h:15];
    [topBackV addSubview:remainLab];
    
    DImageV *remainTimeIcon = [DImageV imagV:@"剩余倒计时" frameX:kScreenWidth - 15 - CGRectGetWidth(remainLab.frame) - 4 - 13 y:CGRectGetMinY(soldedImgV.frame) w:13.5 h:15];
    [topBackV addSubview:remainTimeIcon];
    
    [Utility bottomLine:topBackV];
    
    DView *middleBackV = [DView viewFrameX:0 y:CGRectGetMaxY(topBackV.frame) + 10 w:kScreenWidth h:10];
    middleBackV.backgroundColor = THEME_COLOR_White;
    [cellContetView addSubview:middleBackV];
    
    [Utility topLine:middleBackV];
    
    DLable *topLab = [DLable LabTxt:@"商品说明" txtFont:TF13 txtColor:THEME_COLOR_TEXT frameX:15 y:0 w:kScreenWidth - 2 * 15 h:27];
    [middleBackV addSubview:topLab];
    
    CALayer *firstLine = [DView layerFrameX:15 y:27.0f w:kScreenWidth - 2 * 15 h:0.5f];
    [middleBackV.layer addSublayer:firstLine];
    
    _textView = [[UITextView alloc] initWithFrame:CGRectMake(15, 27.5f, kScreenWidth - 2 * 15, 10)];
    _textView.showsVerticalScrollIndicator = NO;
    _textView.showsVerticalScrollIndicator = NO;
    NSAttributedString *attributedString = [[NSAttributedString alloc] initWithData:[_detailModel.goodsInfo dataUsingEncoding:NSUnicodeStringEncoding] options:@{ NSDocumentTypeDocumentAttribute: NSHTMLTextDocumentType } documentAttributes:nil error:nil];
    [_textView setAttributedText:attributedString];
    _textView.userInteractionEnabled = NO;
    CGSize size = [_textView sizeThatFits:CGSizeMake(kScreenWidth - 2 * 15, FLT_MAX)];
    CGRect frame = _textView.frame;
    frame.size = CGSizeMake(kScreenWidth - 30, size.height);
    _textView.frame = frame;
    _textView.contentSize = frame.size;
    [middleBackV addSubview:_textView];
    
    DLable *brandTitleLab = [DLable LabTxt:@"品牌商" txtFont:TF15 txtColor:THEME_COLOR_TEXT frameX:15 y:CGRectGetMaxY(_textView.frame) w:kScreenWidth - 2 * 15 h:18];
    [middleBackV addSubview:brandTitleLab];
    
    CALayer *line = [DView layerFrameX:15 y:CGRectGetMaxY(brandTitleLab.frame) + 10 w:kScreenWidth - 2 * 15 h:0.5f];
    [middleBackV.layer addSublayer:line];
    
    CGFloat height = [Utility calculateStringHeight:_detailModel.brand font:FONT(TF15) constrainedSize:CGSizeMake(kScreenWidth - 2 * 15, 10000)].height;
    DLable *brandLab = [DLable LabTxt:_detailModel.brand txtFont:TF15 txtColor:THEME_COLOR_SMOKE frameX:15 y:CGRectGetMaxY(line.frame) w:kScreenWidth - 2 * 15 h:height + 20];
    [middleBackV addSubview:brandLab];
    
    DButton *brandClickBtn = [DButton buttonWithType:UIButtonTypeCustom];
    brandClickBtn.frame = brandLab.frame;
    [brandClickBtn addTarget:self action:@selector(pushToBrandLinkUrlVC) forControlEvents:UIControlEventTouchUpInside];
    [middleBackV addSubview:brandClickBtn];
    
    frame = middleBackV.frame;
    frame.size.height = CGRectGetMaxY(brandLab.frame) + 10;
    middleBackV.frame = frame;
    
    frame = cellContetView.frame;
    frame.size.height = CGRectGetMaxY(middleBackV.frame);
    cellContetView.frame = frame;
    return cellContetView;
}

- (void)pushToBrandLinkUrlVC
{
    if (_detailModel.brandUrl.length > 0)
    {
        HWApplicationDetailViewController *appDetailVC = [[HWApplicationDetailViewController alloc] init];
        appDetailVC.navigationItem.titleView = [Utility navTitleView:_detailModel.brand];
        appDetailVC.appUrl = _detailModel.brandUrl;
        if (self.rDelegate && [self.rDelegate respondsToSelector:@selector(pushToVC:)])
        {
            [self.rDelegate pushToVC:appDetailVC];
        }
    }
}

@end
